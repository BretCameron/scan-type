function TypeChecker(){const i=(i,t)=>i&&Object.prototype.toString.call(i)===`[object ${t}]`;this.isArguments=(i=>!!this.isFunction(i.callee)),this.isArray=(t=>Array.isArray?Array.isArray(t):i(t,"Array")),this.isArrayBuffer=(t=>i(t,"ArrayBuffer")),this.isAsyncFunction=(t=>i(t,"AsyncFunction")),this.isBigInt=(t=>i(t,"BigInt")),this.isBigInt64Array=(t=>i(t,"BigInt64Array")),this.isBigUint64Array=(t=>i(t,"BigUint64Array")),this.isBoolean=(t=>i(t,"Boolean")),this.isClass=(i=>!(!this.isFunction(i)||!/^class\b/.test(i.toString()))),this.isDataView=(t=>i(t,"DataView")),this.isDate=(t=>i(t,"Date")),this.isError=(t=>i(t,"Error")),this.isFloat=(i=>this.isNumber(i)&&!this.isInteger(i)),this.isFloat32Array=(t=>i(t,"Float32Array")),this.isFloat64Array=(t=>i(t,"Float64Array")),this.isFunction=(t=>i(t,"Function")),this.isGenerator=(t=>i(t,"Generator")),this.isGeneratorFunction=(t=>i(t,"GeneratorFunction")),this.isGlobalThis=(i=>!(!globalThis||i!==globalThis)),this.isInfinite=(i=>this.isNumber(i)&&!Number.isFinite(i)),this.isInt8Array=(t=>i(t,"Int8Array")),this.isInt16Array=(t=>i(t,"Int16Array")),this.isInt32Array=(t=>i(t,"Int32Array")),this.isInteger=(i=>Number.isInteger(i)||"number"==typeof i&&isFinite(i)&&Math.floor(i)===i),this.isIntl=(i=>!!this.isFunction(i.getCanonicalLocales)),this.isJSON=(i=>{try{return JSON.parse(i),!0}catch{return!1}}),this.isMap=(t=>i(t,"Map")),this.isMath=(t=>i(t,"Math")),this.isNaN=(i=>Number.isNaN(i)),this.isNull=(i=>null===i),this.isNumber=(t=>i(t,"Number")),this.isObject=(t=>i(t,"Object")),this.isPrimitive=(i=>!!(this.isBoolean(i)||this.isString(i)||this.isNumber(i)||this.isSymbol(i)||this.isUndefined(i))),this.isPromise=(t=>i(t,"Promise")),this.isProxy=(i=>!!this.isFunction(i.revocable)),this.isReflect=(i=>!!(this.isFunction(i.apply)&&this.isFunction(i.construct)&&this.isFunction(i.defineProperty)&&this.isFunction(i.deleteProperty)&&this.isFunction(i.get)&&this.isFunction(i.getOwnPropertyDescriptor)&&this.isFunction(i.getPrototypeOf)&&this.isFunction(i.has)&&this.isFunction(i.isExtensible)&&this.isFunction(i.ownKeys)&&this.isFunction(i.preventExtensions)&&this.isFunction(i.set)&&this.isFunction(i.setPrototypeOf))),this.isRegExp=(t=>i(t,"RegExp")),this.isSafeFloat=(i=>this.isNumber(i)&&!this.isSafeInteger(i)),this.isSafeInteger=(i=>Number.isSafeInteger?Number.isSafeInteger(i):(Number.MAX_SAFE_INTEGER||(Number.MAX_SAFE_INTEGER=9007199254740991),this.isInteger(i)&&Math.abs(i)<=Number.MAX_SAFE_INTEGER)),this.isSet=(t=>i(t,"Set")),this.isSharedArrayBuffer=(t=>i(t,"SharedArrayBuffer")),this.isString=(t=>i(t,"String")),this.isSymbol=(t=>i(t,"Symbol")),this.isTypedArray=(i=>!!this.isArrayBuffer(i.buffer)),this.isUint8Array=(t=>i(t,"Uint8Array")),this.isUint8ClampedArray=(t=>i(t,"Uint8ClampedArray")),this.isUint16Array=(t=>i(t,"Uint16Array")),this.isUint32Array=(t=>i(t,"Uint32Array")),this.isUndefined=(i=>void 0===i),this.isWeakMap=(t=>i(t,"WeakMap")),this.isWeakSet=(t=>i(t,"WeakSet")),this.isWebAssembly=(t=>i(t,"WebAssembly"))}module.exports=TypeChecker;